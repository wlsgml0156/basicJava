/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.30
 * Generated at: 2020-02-05 00:41:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1580352827226L));
    _jspx_dependants.put("jar:file:/D:/java1209/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/myweb/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fn.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("jar:file:/D:/java1209/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/myweb/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("  <title>My Web</title>\r\n");
      out.write("  <meta charset=\"utf-8\">\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\r\n");
      out.write("  <link href=\"https://fonts.googleapis.com/css?family=Montserrat\" rel=\"stylesheet\">\r\n");
      out.write("  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n");
      out.write("  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("  <!-- CSS, JS import -->\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"./css/mystyle.css\">\r\n");
      out.write("  <script src=\"./js/myscript.js\"></script>\r\n");
      out.write("\r\n");
      out.write("  <style>\r\n");
      out.write("  .time{margin:auto 0; /*가운데 정렬*/\r\n");
      out.write("        background-color:white; \r\n");
      out.write("\t    width:100%; height:50px;\r\n");
      out.write("\t\tcolor:blue;            \r\n");
      out.write("\t\tfont-weight:bold;\r\n");
      out.write("\t\tfont-size:20px;\r\n");
      out.write("\t\ttext-align:center;}\r\n");
      out.write("  </style>\r\n");
      out.write("  <script>\r\n");
      out.write("  function showtime(){\r\n");
      out.write("   var today=new Date();\r\n");
      out.write("   var str=\"\";\r\n");
      out.write("   \r\n");
      out.write("   str += today.getFullYear() + \".\";\r\n");
      out.write("\r\n");
      out.write("   if(today.getMonth()+1<10){\r\n");
      out.write("     str += \"0\"; //글자갯수를 2자리로 맞추기 위해\r\n");
      out.write("   }\r\n");
      out.write("   str += (today.getMonth()+1) + \".\";\r\n");
      out.write("\r\n");
      out.write("   if(today.getDate()<10){\r\n");
      out.write("\t\tstr += \"0\";                      \r\n");
      out.write("   }//if end\r\n");
      out.write("   str += today.getDate() + \".\";\r\n");
      out.write("  \r\n");
      out.write("   switch(today.getDay()) {\r\n");
      out.write("     case 0: str += \" (일) \"; break;\r\n");
      out.write("     case 1: str += \" (월) \"; break;\r\n");
      out.write("     case 2: str += \" (화) \"; break;\r\n");
      out.write("     case 3: str += \" (수) \"; break;\r\n");
      out.write("     case 4: str += \" (목) \"; break;\r\n");
      out.write("\t case 5: str += \" (금) \"; break;\r\n");
      out.write("\t case 6: str += \" (토) \"; break;\r\n");
      out.write("   }//switch end\r\n");
      out.write("\r\n");
      out.write("    if(today.getHours()<12)  {\r\n");
      out.write("\t\t  str += \"AM \";\r\n");
      out.write("    } else {\r\n");
      out.write("\t\t  str += \"PM \";\r\n");
      out.write("    }//if end\r\n");
      out.write("\t\r\n");
      out.write("\tif(today.getHours()>=13)  { //시\r\n");
      out.write("\t\t  str += (today.getHours()-12)+\":\";\r\n");
      out.write("\t} else {\r\n");
      out.write("\t\t  str += today.getHours()+\":\";\r\n");
      out.write("\t}//if end\r\n");
      out.write("\r\n");
      out.write("\tif(today.getMinutes()<10) { //분\r\n");
      out.write("\t\t  str += \"0\";\r\n");
      out.write("\t} \t\t\r\n");
      out.write("\tstr += today.getMinutes()+\":\";\r\n");
      out.write("\r\n");
      out.write("\tif(today.getSeconds()<10) { //초\r\n");
      out.write("\t\t  str += \"0\";\r\n");
      out.write("\t} \r\n");
      out.write("\tstr += today.getSeconds();\r\n");
      out.write("\r\n");
      out.write("    document.getElementById(\"clock\").innerHTML=str; \r\n");
      out.write("    timer=setTimeout(showtime, 1000);\r\n");
      out.write("  }//showtime() end\r\n");
      out.write("\r\n");
      out.write("  var timer;\r\n");
      out.write("\r\n");
      out.write("  function killtime(){\r\n");
      out.write("     clearTimeout(timer); //시간해제\r\n");
      out.write("  }//killtime() end\r\n");
      out.write(" </script>\r\n");
      out.write("  \r\n");
      out.write("</head>\r\n");
      out.write("<body onload=\"showtime()\" onunload=\"killtime()\">\r\n");
      out.write("\r\n");
      out.write("<!-- 메인카테고리 시작 -->\r\n");
      out.write("<nav class=\"navbar navbar-default\">\r\n");
      out.write("  <div class=\"container\">\r\n");
      out.write("    <div class=\"navbar-header\">\r\n");
      out.write("      <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#myNavbar\">\r\n");
      out.write("        <span class=\"icon-bar\"></span>\r\n");
      out.write("        <span class=\"icon-bar\"></span>\r\n");
      out.write("        <span class=\"icon-bar\"></span>                        \r\n");
      out.write("      </button>\r\n");
      out.write("      <a class=\"navbar-brand\" href=\"#\">HOME</a>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"collapse navbar-collapse\" id=\"myNavbar\">\r\n");
      out.write("      <ul class=\"nav navbar-nav navbar-right\">\r\n");
      out.write("        <li><a href=\"./bbs/bbsList.jsp\">게시판</a></li>\r\n");
      out.write("        <li><a href=\"./notice/noticeList.jsp\">공지사항</a></li>\r\n");
      out.write("        <li><a href=\"./member/loginForm.jsp\">로그인</a></li>\r\n");
      out.write("        <li><a href=\"./pds/pdsList.jsp\">포토갤러리</a></li>\r\n");
      out.write("        <li><a href=\"./mail/mailForm.jsp\">메일보내기</a></li>\r\n");
      out.write("        <li><a href=\"./bbs2/bbslist.do\">게시판(MVC)</a></li>\r\n");
      out.write("      </ul>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</nav>\r\n");
      out.write("<!-- 메인카테고리 끝 -->\r\n");
      out.write("\r\n");
      out.write("<!-- container 시작 -->\r\n");
      out.write("<div class=\"container-fluid bg-1 text-center\">\r\n");
      out.write("  <h3 class=\"margin\">Welcome To MyWeb</h3>\r\n");
      out.write("  <img src=\"./images/cosmos1.jpg\" class=\"img-responsive img-circle margin\" style=\"display:inline\" alt=\"코스모스\" width=\"350\" height=\"350\">\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"container-fluid bg-3 text-center\">    \r\n");
      out.write("  <div class=\"row\">\r\n");
      out.write("    <div class=\"col-sm-12\"><br><br>\r\n");
      out.write("         <!-- 디지털시계 -->\r\n");
      out.write("         <div id=\"clock\" class=\"time\"></div>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("<!-- container 끝 -->\r\n");
      out.write("\r\n");
      out.write("<!-- Footer -->\r\n");
      out.write("<footer class=\"container-fluid bg-4 text-center\">\r\n");
      out.write("  Copyright &copy; 2020 MyWeb \r\n");
      out.write("</footer>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
